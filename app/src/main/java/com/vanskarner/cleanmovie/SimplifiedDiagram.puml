@startuml
!include ../../../../../../../StylesForDiagrams.puml

package cleanmovie as "com.vanskarner.cleanmovie.ui"{
package errors{
    class ErrorDialog{
        - {static} TAG: String = "ErrorDialog"
        - action: Runnable
        - binding: ViewDataBinding
        + ErrorDialog()
        + setError(ErrorView<?>,Runnable): void
        + show(FragmentManager): void
    }
    together {
    class FavoritesLimitError
    class NoInternetError
    class NotFoundError
    class ServerError
    class ServiceUnavailableError
    class UnauthorisedError
    class UnknownError
    }

}
package movie{
    class MovieModelMapper{
        - MovieModelMapper()
        + {static} convert(MovieDetailDS): MovieDetailModel
        + {static} convert(MovieDetailModel): MovieDetailDS
        + {static} convert(List<MovieBasicDS>): List<MovieBasicModel>
        - {static} convert(MovieBasicDS): MovieBasicModel
    }
    class MovieDetailModel<<(D,orange)Data Structure>>
    class MovieBasicModel<<(D,orange)Data Structure>>
    class FavoritesFragment{
        ~ singleAdapter: SingleAdapter
        ~ binding: FavoritesFragmentBinding
        + showFavorites(List<MovieBasicDS>): void
        + showFavoriteDetail(MovieDetailDS):void
        + setNotFavorites(boolean): void
        + showError(ErrorView<?>): void
        + showRemovedItems(int): void
        - onClickTrashMenuItem(MenuItem): boolean
        - onClickFavoriteItem(View): void
    }
    class DeleteFavoritesDialog{
        - {static}TAG: String = "DeleteFavoritesDialog"
        - onAccept: DialogInterface.OnClickListener
        + DeleteFavoritesDialog()
        + setOnAccept(DialogInterface.OnClickListener): void
        + show(FragmentManager): void
    }
    class FavoritesBindAdapter{
        - onClickItem: View.OnClickListener
        + FavoritesBindAdapter()
        + setOnClickItem(View.OnClickListener): void
    }
    class FavoritesDetailDialog{
        - {static} TAG: String = "FavoritesDetailDialog"
        - binding: FavoriteDetailDialogBinding
        + FavoritesDetailDialog()
        + setModel(MovieDetailModel): void
        + show(FragmentManager): void
    }
    class Pagination
    class RxSearchView{
        -{static} TIMEOUT: int = 350
        - RxSearchView()
        ~{static} setFilter(SearchView,Consumer<String>): Disposable
        -{static} getRxOnQueryTextListener(SearchView): Observable<String>
    }
    class UpcomingBindAdapter{
        - onClickItem: View.OnClickListener
        + UpcomingBindAdapter()
        + setOnClickItem(View.OnClickListener): void
    }
    class UpcomingFragment{
        ~ singleAdapter: SingleAdapter
        ~ compositeDisposable: CompositeDisposable
        ~ binding: UpcomingFragmentBinding
        + setSearchView(boolean): void
        + setInitialProgress(boolean): void
        + setPagingProgress(boolean): void
        + enableScroll(): void
        + paginate(): void
        + showUpcoming(List<MovieBasicDS>): void
        + showError(ErrorView<?>): void
        - configNavToolbar(): void
        - configSearchView(): void
        - configRecyclerView(): void
        - onClickUpcomingItem(View): void
        - configFilter(): void
        - getSearchView(): SearchView
    }
    class UpcomingDetailFragment{
        ~ binding: UpcomingDetailFragmentBinding
        + setReadyViews(boolean): void
        + setMarkedAsFavorite(boolean): void
        + showUpcomingDetail(MovieDetailDS): void
        + showError(ErrorView<?>): void
        - configNavToolbar(): void
        - onClickHeartMenuItem(MenuItem): boolean
        - getMovieId(): int
        - toBase64(ImageView): String
    }
}
}

/'Favorites Feature'/
FavoritesFragment --> FavoritesBindAdapter
FavoritesFragment --> DeleteFavoritesDialog
FavoritesFragment --> FavoritesDetailDialog
FavoritesFragment ..> MovieModelMapper
FavoritesDetailDialog --> MovieDetailModel
FavoritesFragment ..> MovieBasicModel
ErrorDialog <.. FavoritesFragment: <<use>>

/'Upcoming Feature'/
UpcomingFragment --> Pagination
UpcomingFragment --> UpcomingBindAdapter
UpcomingFragment --> RxSearchView
UpcomingFragment ..> MovieModelMapper
UpcomingFragment ..> MovieBasicModel
ErrorDialog <.. UpcomingFragment: <<use>>

/'UpcomingDetail Feature'/
ErrorDialog <.. UpcomingDetailFragment: <<use>>
UpcomingDetailFragment ..> MovieModelMapper

MovieDetailModel --> MovieBasicModel
MovieModelMapper ..> MovieDetailModel
MovieModelMapper ..> MovieBasicModel

hide MovieModelMapper attributes
hide FavoritesLimitError members
hide NoInternetError members
hide NotFoundError members
hide ServerError members
hide ServiceUnavailableError members
hide UnauthorisedError members
hide UnknownError members
hide <<Data Structure>> members
hide Pagination members
hide RxSearchView members
hide UpcomingBindAdapter members
hide DeleteFavoritesDialog members
hide FavoritesBindAdapter members
hide FavoritesDetailDialog members
hide members
skinparam Linetype ortho
@enduml