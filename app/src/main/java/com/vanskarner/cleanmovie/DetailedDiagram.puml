@startuml
!include ../../../../../../../StylesForDiagrams.puml

package cleanmovie as "com.vanskarner.cleanmovie.ui"{
    class MovieViewMapper{
        - MovieViewMapper()
        + {static} convert(MovieDetailDS): MovieDetailModel
        + {static} convert(MovieDetailModel): MovieDetailDS
        + {static} convert(List<MovieDS>): List<MovieModel>
        - {static} convert(MovieDS): MovieModel
    }
    class MovieDetailModel<<(D,orange)Data Structure>>
    class MovieModel<<(D,orange)Data Structure>>
    package errors{
    class ErrorDialog{
        - {static} TAG: String = "ErrorDialog"
        - action: Runnable
        - binding: ViewDataBinding
        + ErrorDialog()
        + setError(ErrorView<?>,Runnable): void
        + show(FragmentManager): void
    }
    class FavoritesLimitError
            class NoInternetError
            class NotFoundError
            class ServerError
            class ServiceUnavailableError
            class UnauthorisedError
            class UnknownError
    }
    together {
        class FavoritesFragment{
            ~ singleAdapter: SingleAdapter
            ~ binding: FavoritesFragmentBinding
            + showFavorites(List<MovieDS>): void
            + showFavoriteDetail(MovieDetailDS):void
            + setNotFavorites(boolean): void
            + showError(ErrorView<?>): void
            + showRemovedItems(int): void
            - onClickTrashMenuItem(MenuItem): boolean
            - onClickFavoriteItem(View): void
        }
        class DeleteFavoritesDialog{
            - {static}TAG: String = "DeleteFavoritesDialog"
            - onAccept: DialogInterface.OnClickListener
            + DeleteFavoritesDialog()
            + setOnAccept(DialogInterface.OnClickListener): void
            + show(FragmentManager): void
        }
        class FavoritesBindAdapter{
            - onClickItem: View.OnClickListener
            + FavoritesBindAdapter()
            + setOnClickItem(View.OnClickListener): void
        }
        class FavoritesDetailDialog{
            - {static} TAG: String = "FavoritesDetailDialog"
            - binding: FavoriteDetailDialogBinding
            + FavoritesDetailDialog()
            + setModel(MovieDetailModel): void
            + show(FragmentManager): void
        }
    }
    together {
        class Pagination
        class RxSearchView{
            -{static} TIMEOUT: int = 350
            - RxSearchView()
            ~{static} setFilter(SearchView,Consumer<String>): Disposable
            -{static} getRxOnQueryTextListener(SearchView): Observable<String>
        }
        class UpcomingBindAdapter{
            - onClickItem: View.OnClickListener
            + UpcomingBindAdapter()
            + setOnClickItem(View.OnClickListener): void
        }
        class UpcomingFragment{
            ~ singleAdapter: SingleAdapter
            ~ compositeDisposable: CompositeDisposable
            ~ binding: UpcomingFragmentBinding
            + setSearchView(boolean): void
            + setInitialProgress(boolean): void
            + setPagingProgress(boolean): void
            + enableScroll(): void
            + paginate(): void
            + showUpcoming(List<MovieDS>): void
            + showError(ErrorView<?>): void
            - configNavToolbar(): void
            - configSearchView(): void
            - configRecyclerView(): void
            - onClickUpcomingItem(View): void
            - configFilter(): void
            - getSearchView(): SearchView
        }
    }
    together {
        class UpcomingDetailFragment{
            ~ binding: UpcomingDetailFragmentBinding
            + setReadyViews(boolean): void
            + setMarkedAsFavorite(boolean): void
            + showUpcomingDetail(MovieDetailDS): void
            + showError(ErrorView<?>): void
            - configNavToolbar(): void
            - onClickHeartMenuItem(MenuItem): boolean
            - getMovieId(): int
            - toBase64(ImageView): String
        }
    }
}

/'Favorites Feature'/
FavoritesFragment --> FavoritesBindAdapter: ~ favoritesBindAdapter
FavoritesFragment --> DeleteFavoritesDialog: ~deleteFavorites
FavoritesFragment --> FavoritesDetailDialog: ~detailDialog
FavoritesFragment --> ErrorDialog: ~errorDialog
FavoritesDetailDialog --> MovieDetailModel: -model

/'Upcoming Feature'/
UpcomingFragment --> Pagination:  ~pagination
UpcomingFragment --> UpcomingBindAdapter:  ~upcomingBindAdapter
UpcomingFragment --> ErrorDialog: ~errorDialog
UpcomingFragment --> RxSearchView: ~rxSearchView

/'UpcomingDetail Feature'/
UpcomingDetailFragment --> ErrorDialog: ~errorDialog

MovieDetailModel <.. MovieViewMapper
MovieModel <.. MovieViewMapper

/'UpcomingFragment ..> MovieViewMapper
FavoritesFragment ..> MovieViewMapper
UpcomingDetailFragment ..> MovieViewMapper'/

MovieViewMapper ..> UpcomingFragment
MovieViewMapper ..> FavoritesFragment
MovieViewMapper ..> UpcomingDetailFragment

left to right direction
hide MovieViewMapper attributes
hide FavoritesLimitError members
hide NoInternetError members
hide NotFoundError members
hide ServerError members
hide ServiceUnavailableError members
hide UnauthorisedError members
hide UnknownError members
hide <<Data Structure>> members
hide Pagination members
hide RxSearchView members
hide UpcomingBindAdapter members
hide DeleteFavoritesDialog members
hide FavoritesBindAdapter members
hide FavoritesDetailDialog members
skinparam Linetype ortho
@enduml