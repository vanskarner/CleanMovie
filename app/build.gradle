//file:noinspection DependencyNotationArgument
plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
}

android {
    namespace 'com.vanskarner.cleanmovie'
    compileSdk androidParameters.compileSdkVersion

    defaultConfig {
        applicationId androidParameters.applicationId
        minSdk androidParameters.minSdkVersion
        targetSdk androidParameters.targetSdkVersion
        versionCode androidParameters.versionCode
        versionName androidParameters.versionName
        multiDexEnabled androidParameters.multiDexEnabled
        testInstrumentationRunner androidParameters.testInstrumentationRunner
    }

    buildTypes {
        Properties dataProperties = new Properties()
        dataProperties.load(new FileInputStream(file('../data.properties')))
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "themoviedbApiKey", dataProperties["themoviedbApiKey"]
            buildConfigField "String", "themoviedbURL", dataProperties["themoviedbURL"]
            buildConfigField "String", "themoviedbImageURL", dataProperties["themoviedbImageURL"]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding true
        // for view binding:
        // viewBinding true
    }
}

dependencies {

    implementation project(':core')
    implementation project(':features:movie')
    implementation files('./libs/singleAdapter2.0.0-release.aar')
    implementation androidx.appcompat
    implementation androidx.materialDesign
    implementation androidx.constraintLayout
    implementation androidx.navigationFragment
    implementation androidx.navigationUI
    implementation async.rxjava2Android
    implementation imageLoading.glide
    implementation dependencyInjection.daggerAndroidSupport
    implementation androidx.room
    implementation androidx.roomRxjava2
    annotationProcessor androidx.roomCompiler
    annotationProcessor dependencyInjection.daggerAndroidProcessor
    annotationProcessor dependencyInjection.daggerCompiler

    testImplementation unitTest.junit
    testImplementation unitTest.mockito
    testImplementation testFixtures(project(":core"))

    androidTestImplementation androidxTest.junit
    androidTestImplementation androidxTest.espressoCore
    androidTestImplementation androidxTest.espressoContrib
    androidTestImplementation androidxTest.navigation
    androidTestAnnotationProcessor dependencyInjection.daggerCompiler
    androidTestImplementation testFixtures(project(":features:movie"))
    androidTestImplementation testFixtures(project(":core"))
    androidTestImplementation async.rx2Idler
    debugImplementation androidxTest.fragmentManifest
    androidTestImplementation androidxTest.fragment

    //issue: https://youtrack.jetbrains.com/issue/KT-54136/Duplicated-classes-cause-build-failure-if-a-dependency-to-kotlin-stdlib-specified-in-an-android-project
    constraints {
        //noinspection ForeignDelegate
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        //noinspection ForeignDelegate
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}