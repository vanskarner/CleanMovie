ext {
    //Main
    rxJava2Version = "2.2.21"
    guavaVersion = "31.1-jre"
    daggerVersion = "2.35.1"
    rxJava2AndroidVersion = "2.1.1"
    retrofitVersion = "2.7.2"
    okhttpVersion = "4.8.1"
    roomVersion = "2.3.0"
    appCompatVersion = "1.3.1"
    materialVersion = "1.4.0"
    constraintLayoutVersion = "2.1.0"
    navigationVersion = "2.3.5"
    glideVersion = "4.12.0"

    //Test
    junitVersion = "4.13.2"
    androidJunitVersion = "1.1.3"
    espressoVersion = "3.5.0"
    mockwebserverVersion = "4.10.0"
    rx2Idler = "0.11.0"
    fragmentTestingVersion = "1.6.0"
    androidRunnerVersion = "1.4.0"

    androidParameters = [
            compileSdkVersion        : 33,
            buildToolsVersion        : "30.0.3",
            applicationId            : 'com.vanskarner.cleanmovie',
            minSdkVersion            : 16,
            targetSdkVersion         : 33,
            versionCode              : 1,
            versionName              : "1.0",
            testInstrumentationRunner: "com.vanskarner.cleanmovie.CustomTestRunner",
            multiDexEnabled          : true
    ]

    common = [
            main: [
                    rxJava2       : "io.reactivex.rxjava2:rxjava:${rxJava2Version}",
                    dagger        : "com.google.dagger:dagger:${daggerVersion}",
                    daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}"
            ],
            test: [
                    junit        : "junit:junit:${junitVersion}",
                    androidJunit : "androidx.test.ext:junit:${androidJunitVersion}",
                    androidRunner: "androidx.test:runner:${androidRunnerVersion}",
                    mockWebServer: "com.squareup.okhttp3:mockwebserver:${mockwebserverVersion}"
            ]
    ]

    presentation = [
            main: [
                    appcompat             : "androidx.appcompat:appcompat:${appCompatVersion}",
                    material              : "com.google.android.material:material:${materialVersion}",
                    constraintLayout      : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
                    navigationFragment    : "androidx.navigation:navigation-fragment:${navigationVersion}",
                    navigationUI          : "androidx.navigation:navigation-ui:${navigationVersion}",
                    rxAndroid             : "io.reactivex.rxjava2:rxandroid:${rxJava2AndroidVersion}",
                    glide                 : "com.github.bumptech.glide:glide:${glideVersion}",
                    daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
                    daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}"
            ],
            test: [
                    espressoCore     : "androidx.test.espresso:espresso-core:${espressoVersion}",
                    espressoContrib  : "androidx.test.espresso:espresso-contrib:${espressoVersion}",
                    navigationTesting: "androidx.navigation:navigation-testing:${navigationVersion}",
                    rx2Idler         : "com.squareup.rx.idler:rx2-idler:${rx2Idler}",
                    fragmentTestingManifest  : "androidx.fragment:fragment-testing-manifest:${fragmentTestingVersion}",
                    fragmentTesting: "androidx.fragment:fragment-testing:${fragmentTestingVersion}"
            ]
    ]

    remoteData = [
            main: [
                    retrofit              : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
                    retrofitConverterGson : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
                    retrofitAdapterRxJava2: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
                    okhttp                : "com.squareup.okhttp3:okhttp:${okhttpVersion}"
            ],
            test: [
                    okhttpLogging: "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
            ]
    ]

    localData = [
            main: [
                    roomRuntime   : "androidx.room:room-runtime:${roomVersion}",
                    roomRxjava2   : "androidx.room:room-rxjava2:${roomVersion}",
                    roomCompiler  : "androidx.room:room-compiler:${roomVersion}"
            ],
            test: [
                    roomTesting  : "androidx.room:room-testing:${roomVersion}"
            ]
    ]

}