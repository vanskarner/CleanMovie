ext {
    //Main
    rxJava2Version = "2.2.21"
    guavaVersion = "31.1-jre"
    daggerVersion = "2.35.1"
    rxJava2AndroidVersion = "2.1.1"
    retrofitVersion = "2.7.2"
    okhttpVersion = "4.8.1"
    roomVersion = "2.3.0"
    appCompatVersion = "1.3.1"
    materialVersion = "1.4.0"
    constraintLayoutVersion = "2.1.0"
    navigationVersion = "2.3.5"
    glideVersion = "4.12.0"

    //Test
    junitVersion = "4.13.2"
    mockitoVersion = "2.22.0"
    androidJunitVersion = "1.1.3"
    espressoVersion = "3.5.0"
    mockwebserverVersion = "4.10.0"
    rx2Idler = "0.11.0"
    fragmentTestingVersion = "1.6.0"
    androidRunnerVersion = "1.4.0"
    gsonVersion = "2.8.9"

    androidParameters = [
            compileSdkVersion        : 33,
            buildToolsVersion        : "30.0.3",
            applicationId            : 'com.vanskarner.cleanmovie',
            minSdkVersion            : 21,
            targetSdkVersion         : 33,
            versionCode              : 1,
            versionName              : "1.0",
            testInstrumentationRunner: "com.vanskarner.cleanmovie.main.CustomTestRunner",
            multiDexEnabled          : true
    ]

    dependencyInjection = [
            dagger                : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler        : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}"
    ]
    clientHttp = [
            retrofit2              : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofit2ConverterGson : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofit2AdapterRxJava2: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            okhttp3                : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            okhttp3Logging         : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    ]
    async = [
            rxjava2       : "io.reactivex.rxjava2:rxjava:${rxJava2Version}",
            rxjava2Android: "io.reactivex.rxjava2:rxandroid:${rxJava2AndroidVersion}",
            rx2Idler      : "com.squareup.rx.idler:rx2-idler:${rx2Idler}"
    ]
    imageLoading = [
            glide: "com.github.bumptech.glide:glide:${glideVersion}"
    ]
    mockServer = [
            mockWebServer: "com.squareup.okhttp3:mockwebserver:${mockwebserverVersion}"
    ]
    jsonParser = [
            gson: "com.google.code.gson:gson:${gsonVersion}"
    ]
    androidx = [
            materialDesign    : "com.google.android.material:material:${materialVersion}",
            appcompat         : "androidx.appcompat:appcompat:${appCompatVersion}",
            constraintLayout  : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            navigationFragment: "androidx.navigation:navigation-fragment:${navigationVersion}",
            navigationUI      : "androidx.navigation:navigation-ui:${navigationVersion}",
            room              : "androidx.room:room-runtime:${roomVersion}",
            roomRxjava2       : "androidx.room:room-rxjava2:${roomVersion}",
            roomCompiler      : "androidx.room:room-compiler:${roomVersion}"
    ]
    androidxTest = [
            junit           : "androidx.test.ext:junit:${androidJunitVersion}",
            runner          : "androidx.test:runner:${androidRunnerVersion}",
            espressoCore    : "androidx.test.espresso:espresso-core:${espressoVersion}",
            espressoContrib : "androidx.test.espresso:espresso-contrib:${espressoVersion}",
            navigation      : "androidx.navigation:navigation-testing:${navigationVersion}",
            fragmentManifest: "androidx.fragment:fragment-testing-manifest:${fragmentTestingVersion}",
            fragment        : "androidx.fragment:fragment-testing:${fragmentTestingVersion}",
            room            : "androidx.room:room-testing:${roomVersion}"
    ]
    unitTest = [
            junit  : "junit:junit:${junitVersion}",
            mockito: "org.mockito:mockito-core:${mockitoVersion}"
    ]
}