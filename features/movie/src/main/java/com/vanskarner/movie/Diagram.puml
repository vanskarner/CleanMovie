@startuml
!include ../../../../../../../../architecture_resources/StylesForDiagrams.puml

/'Specification'/
package movie as "com.vanskarner.movie"{
    package businesslogic {
        interface MovieServices<<interface>>
        exception MovieError<<abstract>>
        exception FavoriteLimit
        class MovieDetailDS<<(D,orange)Data Structure>>
        class MovieBasicDS<<(D,orange)Data Structure>>
        class MoviesDS<<(D,orange)Data Structure>>
        class MoviesFilterDS<<(D,orange)Data Structure>>
        class MovieDefaultServices
        class FilterUpcomingMoviesUseCase
        class ToggleMovieFavoriteUseCase
        class CheckFavoriteMovieUseCase
        class DeleteAllFavoriteMoviesUseCase
        class FindFavoriteMovieUseCase
        class ShowFavoriteMoviesUseCase
        class ShowUpcomingMoviesUseCase
        class FindUpcomingMovieUseCase
        interface MovieLocalRepository<<interface>>
        interface MovieRemoteRepository<<interface>>
        class MovieErrorFilter
        entity MovieBO
    }
    package persistence.local {
        interface MovieDao<<interface>>
        class MovieEntity<<(D,orange)Data Structure>>
        class MovieLocalRxRepository
        class MovieLocalDataMapper
    }
    package persistence.remote {
        class MovieRemoteRxRepository
        class MovieDeserializer
        class MovieDTO<<(D,orange)Data Structure>>
        class MovieRemoteDataMapper
        interface MovieApiClient<<interface>>
        class MoviesResultDTO<<(D,orange)Data Structure>>
        class RemoteDataErrorFilter
        class MovieRemoteErrorInterceptor
        exception MovieRemoteError<<abstract>>
        exception Unauthorised
        exception NotFound
        exception Server
        exception ServiceUnavailable
        exception NoInternet
    }
}

/'Relations'/
MovieServices ..> MoviesDS
MovieServices ..> MovieDetailDS
MovieServices ..> MoviesFilterDS
MoviesDS --> "0..*" MovieBasicDS
MoviesFilterDS --> "0..*" MovieBasicDS
MoviesFilterDS --> "0..*" MovieBasicDS
NoInternet --|> MovieRemoteError
NotFound --|> MovieRemoteError
Server --|> MovieRemoteError
ServiceUnavailable -|> MovieRemoteError
MovieRemoteError <|- Unauthorised
MovieError <|-- FavoriteLimit

MovieServices <|. MovieDefaultServices
MovieDefaultServices --> ShowUpcomingMoviesUseCase
MovieDefaultServices --> FindUpcomingMovieUseCase
MovieDefaultServices --> ShowFavoriteMoviesUseCase
MovieDefaultServices --> FindFavoriteMovieUseCase
MovieDefaultServices --> CheckFavoriteMovieUseCase
MovieDefaultServices --> ToggleMovieFavoriteUseCase
MovieDefaultServices --> DeleteAllFavoriteMoviesUseCase
MovieDefaultServices --> FilterUpcomingMoviesUseCase
CheckFavoriteMovieUseCase --> MovieLocalRepository
ToggleMovieFavoriteUseCase --> MovieLocalRepository
DeleteAllFavoriteMoviesUseCase --> MovieLocalRepository
FindFavoriteMovieUseCase --> MovieLocalRepository
ShowFavoriteMoviesUseCase --> MovieLocalRepository
ShowUpcomingMoviesUseCase --> MovieRemoteRepository
FindUpcomingMovieUseCase --> MovieRemoteRepository
FindUpcomingMovieUseCase ..> MovieBO
ToggleMovieFavoriteUseCase --> MovieErrorFilter
MovieError "1..*" <.. MovieErrorFilter

/'Relations - local-data:start'/
MovieLocalRepository <|.. MovieLocalRxRepository
MovieLocalRxRepository --> MovieDao
MovieLocalRxRepository ..> MovieLocalDataMapper
MovieDao ..> MovieEntity
MovieLocalDataMapper ..> MovieEntity
MovieDetailDS <.. MovieLocalDataMapper: <<use>>
MoviesDS <.. MovieLocalDataMapper: <<use>>
/'Relations - local-data:end'/

/'Relations - remote-data:start'/
MovieRemoteRepository <|.. MovieRemoteRxRepository
MovieRemoteRxRepository --> MovieApiClient
MovieRemoteRxRepository .> MovieRemoteDataMapper
MovieApiClient ..> MovieDTO
MovieApiClient .> MoviesResultDTO
MovieRemoteDataMapper ..> MovieDTO
MovieDetailDS <.. MovieRemoteDataMapper: <<use>>
MovieDetailDS --> MovieBasicDS
MoviesDS <.. MovieRemoteDataMapper: <<use>>
MovieDeserializer .> MovieDTO
MoviesResultDTO --> "0..*" MovieDTO
MovieRemoteError "1..*" <-- RemoteDataErrorFilter
MovieRemoteError <-- RemoteDataErrorFilter
RemoteDataErrorFilter <- MovieRemoteErrorInterceptor
/'Relations - remote-data:end'/

/'Visualization'/
hide members
skinparam LineType ortho
@enduml