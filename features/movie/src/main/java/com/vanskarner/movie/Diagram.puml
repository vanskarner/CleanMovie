@startuml
!include ../../../../../../../../StylesForDiagrams.puml

/'Specification'/
package movie as "com.vanskarner.movie"{
    package businesslogic {
        class MovieDetailDS<<(D,orange)Data Structure>>
        class MovieBasicDS<<(D,orange)Data Structure>>
        class MoviesDS<<(D,orange)Data Structure>>
        class MoviesFilterDS<<(D,orange)Data Structure>>
        interface MovieServices<<interface>>
        class MovieDefaultServices
        abstract UseCase<OutPut,Input><<abstract>>
        class MovieUseCaseFilter
        class FilterUpcomingMoviesUseCase
        class ToggleMovieFavoriteUseCase
        class CheckFavoriteMovieUseCase
        class DeleteAllFavoriteMoviesUseCase
        class FindFavoriteMovieUseCase
        class ShowFavoriteMoviesUseCase
        class ShowUpcomingMoviesUseCase
        class FindUpcomingMovieUseCase
        interface MovieLocalRepository<<interface>>
        interface MovieRemoteRepository<<interface>>
        class MovieMapper
        class MovieErrorFilter
        exception MovieError<<abstract>>
        exception FavoriteLimitError
        entity MovieBO
    }
    package persistence.local {
        interface MovieDao<<interface>>
        class MovieEntity<<(D,orange)Data Structure>>
        class MovieLocalRxRepository
        class MovieLocalDataMapper
    }
    package persistence.remote {
        class MovieRemoteRxRepository
        class MovieDeserializer
        class MovieDTO<<(D,orange)Data Structure>>
        class MovieRemoteDataMapper
        interface MovieApiClient<<interface>>
        class MoviesResultDTO<<(D,orange)Data Structure>>
        class RemoteDataErrorFilter
        exception MovieRemoteError<<abstract>>
        exception Unauthorised
        exception NotFound
        exception Server
        exception ServiceUnavailable
        exception NoInternet
        class MovieRemoteErrorInterceptor
    }
}

/'Relations'/
MovieServices ..> MoviesDS
MovieServices ..> MovieDetailDS
MovieServices ..> MoviesFilterDS
MoviesDS --> "0..*" MovieBasicDS
MoviesFilterDS --> "0..*" MovieBasicDS
MoviesFilterDS --> "0..*" MovieBasicDS
MovieDetailDS --> MovieBasicDS

MovieDefaultServices .|> MovieServices
MovieUseCaseFilter <- MovieDefaultServices
UseCase "1..*" <- MovieUseCaseFilter
UseCase <|-- ShowUpcomingMoviesUseCase
UseCase <|-- FindUpcomingMovieUseCase
UseCase <|-- ShowFavoriteMoviesUseCase
UseCase <|-- FindFavoriteMovieUseCase
UseCase <|-- CheckFavoriteMovieUseCase
UseCase <|-- ToggleMovieFavoriteUseCase
UseCase <|-- DeleteAllFavoriteMoviesUseCase
UseCase <|-- FilterUpcomingMoviesUseCase

CheckFavoriteMovieUseCase --> MovieLocalRepository
ToggleMovieFavoriteUseCase --> MovieLocalRepository
CheckFavoriteMovieUseCase <- ToggleMovieFavoriteUseCase
DeleteAllFavoriteMoviesUseCase --> MovieLocalRepository
FindFavoriteMovieUseCase --> MovieLocalRepository
ShowFavoriteMoviesUseCase --> MovieLocalRepository
ShowUpcomingMoviesUseCase --> MovieRemoteRepository
FindUpcomingMovieUseCase --> MovieRemoteRepository

ShowUpcomingMoviesUseCase ..> MovieMapper
FindUpcomingMovieUseCase ..> MovieMapper
ShowFavoriteMoviesUseCase ..> MovieMapper
FindFavoriteMovieUseCase ..> MovieMapper

MovieMapper ..> MovieDetailDS
MovieMapper ..> MovieBO
MovieMapper ..> MoviesDS

ToggleMovieFavoriteUseCase --> MovieErrorFilter
MovieErrorFilter --> "1..*" MovieError
MovieError <|-- FavoriteLimitError

MovieLocalRepository ..> MovieBO
MovieRemoteRepository ..> MovieBO
/'Relations - local-data:start'/
MovieLocalRxRepository --> MovieDao
MovieDao ..> MovieEntity
MovieLocalRxRepository ..> MovieLocalDataMapper
MovieLocalDataMapper ..> MovieEntity
MovieLocalDataMapper ..> MovieBO
MovieLocalRxRepository ..|> MovieLocalRepository
/'Relations - local-data:end'/

/'Relations - remote-data:start'/
MovieRemoteRxRepository ..|> MovieRemoteRepository
MovieRemoteRxRepository --> MovieApiClient
MovieRemoteRxRepository ..> MovieRemoteDataMapper
MovieApiClient ..> MovieDTO
MovieApiClient ..> MoviesResultDTO
MovieRemoteDataMapper ..> MovieDTO
MovieRemoteDataMapper ..> MovieBO
MovieDeserializer ..> MovieDTO
MoviesResultDTO -> "0..*" MovieDTO
RemoteDataErrorFilter --> "1..*" MovieRemoteError
RemoteDataErrorFilter --> "1" MovieRemoteError
MovieRemoteError <|-- NoInternet
MovieRemoteError <|-- NotFound
MovieRemoteError <|-- Server
MovieRemoteError <|-- ServiceUnavailable
MovieRemoteError <|-- Unauthorised
MovieRemoteErrorInterceptor --> RemoteDataErrorFilter
/'Relations - remote-data:end'/

/'Visualization'/
hide members
skinparam LineType ortho
@enduml