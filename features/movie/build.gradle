//file:noinspection DependencyNotationArgument
plugins {
    id 'com.android.library'
}

android {
    namespace 'com.vanskarner.movie'
    compileSdk androidParameters.compileSdkVersion

    defaultConfig {
        minSdk androidParameters.minSdkVersion
        targetSdk androidParameters.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testFixtures {
        enable = true
    }
}

dependencies {
    implementation project(':core')
    implementation androidx.room
    implementation androidx.roomRxjava2
    annotationProcessor androidx.roomCompiler
    implementation clientHttp.retrofit2
    implementation clientHttp.retrofit2ConverterGson
    implementation clientHttp.retrofit2AdapterRxJava2
    implementation clientHttp.okhttp3
    implementation dependencyInjection.dagger
    annotationProcessor dependencyInjection.daggerCompiler

    testImplementation unitTest.junit
    testImplementation testFixtures(project(":core"))

    androidTestImplementation androidxTest.junit
    androidTestImplementation androidxTest.runner
    androidTestImplementation androidxTest.room
    androidTestImplementation testFixtures(project(":core"))
    androidTestAnnotationProcessor androidx.roomCompiler

    testFixturesImplementation dependencyInjection.dagger
    testFixturesAnnotationProcessor dependencyInjection.daggerCompiler
    testFixturesImplementation clientHttp.retrofit2
    testFixturesImplementation clientHttp.retrofit2ConverterGson
    testFixturesImplementation clientHttp.retrofit2AdapterRxJava2
    testFixturesImplementation clientHttp.okhttp3Logging
}